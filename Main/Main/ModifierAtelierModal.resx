<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddParticipants.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALUAAABgCAYAAABboDM1AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAM/SURBVHhe7dnNS1RxGIbh/qJ2bty1clUbhSBcaAsJFAxB
        kQhpIaGIqAsF0VAoNVFRJkhiMCZRCsNMJJwEJ0tH8AsHmcWgizfeM6dJcXKZnof7ggdkvlb3GX5zvJXJ
        ZIwxpRE1kxtRM7kRNZMbUTO5ETWT25VR7x0e2NRy3BqmO61qpMXK+mvtdsd9xv77vD1vsG6yzcaWZm1n
        f7dos75/Rv1ubSH4oMZYt82uL9rnX98sndk34Dp4e97g3MaSPX3bG7TpcRdr91LUfgU0x3rs0cRzO8ge
        hx8J3CwnuWwQd814q23u/rzQ8IWoPejyoUabWUuEbwVutoXUij14+cSS25vFo/ZvaIJG1PixxM/bl6L2
        M7QfOYAo6p4ftb4P43+j9rscfvDmDI2oyp2dWsVwk61uJfNR+69IP3QDUfbi04y1x4fyUfu9P79VAkRZ
        cu9HcKMjiPruQL2ljtLhU0A0+RGkpKsyH3VpT3Vw3w+IOv/vYxC1/wEoIGrIIWrIIWrIIWrIIWrIIWrI
        IWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrI
        IWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrI
        IWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIIWrIKURd0lVpubPT8GEg
        ugpRl/XXWjqzHz4MRFch6prxVltIrYQPA9GUOkrb3YH6fNS9idfWPT8aPgVE08xawppjPfmok9ubdm/w
        MedqRFr9dIe9+ZrIR+3rev/K+hYnwqeBaJldX7SG6c6g5ULUe4cHVjXSYqvpjfBlQDQcZI+Dk8bO/u7F
        qH2rW0mrGG4KDtxAFHjQD8eeWWJ9qdDxhah9i9+/WPlQow1+nA7fBtxMcxtLwTf0+aB9l6L2+VGkPT4U
        XAH+i9KvBuAmOMllg/NzY6zb6ibbCkeO8ysa9Z/5FeC3SO701gQ3tRm77pX2VAc/CKeW40Wb9V0ZNWNR
        HFEzuRE1kxtRM7kRNRNbxn4D8Hg5pld2l/MAAAAASUVORK5CYII=
</value>
  </data>
</root>